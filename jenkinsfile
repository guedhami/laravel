pipeline {
    agent any



    stages {
        stage('Clone Repository') {
            steps {
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    def dockerBuildCommand = [
                        'docker',
                        'build',
                        '-t', 'test1-jenkins',
                        '.'
                    ]
                    sh script: dockerBuildCommand.join(' '), returnStatus: true
                }
            }
        }

      stage('Push Docker Image to Docker Hub') {
    steps {
        script {
            // Log in to Docker Hub securely using credentials
            withCredentials([usernamePassword(credentialsId: 'dckr_pat_uQfuQ234dHKEE0vbdTISPMIymPQ', passwordVariable: '12345678h', usernameVariable: 'hayder.guedhami@polytechnicien.tn')]) {
                sh '''
                    echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
                    docker tag test1-jenkins:latest hayder69/test-jenkins:latest
                    docker push hayder69/test-jenkins:latest
                '''
            }
        }
    }
}


        stage('Deploy on Kubernetes') {
            steps {
                script {
                    // Assuming your Kubernetes YAML file is named jenkins-agent-pod.yaml
                    sh 'scp -o StrictHostKeyChecking=no jenkins-agent-pod.yaml satoripop@137.117.170.206:/home/mandooza'
                    try {
                        sh 'ssh satoripop@137.117.170.206 kubectl apply -f /home/mandooza/jenkins-agent-pod.yaml'
                    } catch (Exception e) {
                        sh 'ssh satoripop@137.117.170.206 kubectl create -f /home/mandooza/jenkins-agent-pod.yaml'
                    }
                }
            }
        }
    }
}

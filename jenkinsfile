pipeline {
    agent any

    stages {
        stage('Clone Repository') {
            steps {
                // Checkout the GitHub repository
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Define the Docker build command
                    def dockerBuildCommand = [
                        
                        'docker',
                        'build',
                        '-t', 'test1-jenkins',
                        '.'
                    ]

                    // Execute the Docker build command
                    sh script: dockerBuildCommand.join(' '), returnStatus: true
                }
            }
        }

stage('Push Docker Image to Docker Hub') {
   
    steps { 
             DOCKERHUB_USERNAME: 'hayder.guedhami@polytechnicien.tn'
            DOCKERHUB_PASSWORD: '12345678h'
            script {
                sh '''
                # Use DOCKERHUB_USERNAME and DOCKERHUB_PASSWORD in your Docker commands
                    docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
               
            '''
               
                // Tag the Docker image
                sh "docker tag test1-jenkins:latest hayder69/test-jenkins:latest"

                // Push the Docker image
                sh "docker push hayder69/test-jenkins:latest"
            }
        
    }
        }

    stage('deploy on k8s'){
    steps{
       sshagent(['k8s']) {
    sh"scp -o jenkins-agent-pod.yaml  satoripop@137.117.170.206:/home/mandooza"
    script{
        try{
            sh"ssh satoripop@137.117.170.206 kubectl apply -f ."
        }catch(error){
            sh"ssh satoripop@137.117.170.206 kubectl create -f ."
        }
    }
    }
    }
    }
}
}

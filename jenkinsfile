pipeline {
    agent any
    environment {
        DOCKER_HUB_CREDENTIALS = credentials('docker-hub-hayder69')
    }
    stages {
        stage('Build image') {
            steps {
                script {
                    // Define the Docker build command and its arguments as a list
                    def dockerBuildCommand = [
                        'docker',
                        'build',
                        '-t', 'test-jenkins',  // Specify the image name and tag here
                        '.'
                    ]

                    // Execute the Docker build command based on the agent's OS
                    if (isUnix()) {
                        // For non-Windows agents, use the 'sh' step
                        sh script: dockerBuildCommand.join(' '), returnStatus: true
                    } 

                    if (currentBuild.resultIsBetterOrEqualTo('SUCCESS')) {
                        echo 'Docker image built successfully.'
                    } else {
                        error 'Docker image build failed.'
                    }
                }
            }
        }

        stage('Push image') {
            steps {
                script {
                    // Push the Docker image to Docker Hub using the credentials
                    docker.withRegistry('https://registry.hub.docker.com', DOCKER_HUB_CREDENTIALS) {
                        dockerImage.push()
                    }
                }
            }
        }
    }
}

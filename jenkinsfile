pipeline {
    agent any
    environment{
        DOCKERHUB_CREDENTIALS = credentials('docker')
    }

    stages {
        stage('Clone Repository') {
            steps {
                // Checkout the GitHub repository
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Define the Docker build command
                    def dockerBuildCommand = [
                        
                        'docker',
                        'build',
                        '-t', 'test1-jenkins',
                        '.'
                    ]

                    // Execute the Docker build command
                    sh script: dockerBuildCommand.join(' '), returnStatus: true
                }
            }
        }

stage('Push Docker Image to Docker Hub') {
    steps {
        
            script {
                sh "docker tag test1-jenkins:latest hayder69/test-jenkins:latest"
               withDockerRegistry([ credentialsId: "docker" , url:"https://index.docker.io/v1/"]){
                
                // Push the Docker image
                sh "docker push hayder69/test-jenkins:latest"}
            }
        
    }
}
 stage('Deploy on Kubernetes') {
            steps {
                script {
                    // Assuming your Kubernetes YAML file is named jenkins-agent-pod.yaml
                    try {
                        sh 'kubectl apply -f /var/lib/jenkins/workspace/aks/jenkins-agent-pod.yaml'
                    } catch (Exception e) {
                        sh ' kubectl create -f /var/lib/jenkins/workspace/aks/jenkins-agent-pod.yaml'
                    }
                }
            }
        }

}

 }



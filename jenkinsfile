pipeline {
    agent any

    stages {
        stage('Clone Repository') {
            steps {
                // Checkout the GitHub repository
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Define the Docker build command
                    def dockerBuildCommand = [
                        
                        'docker',
                        'build',
                        '-t', 'test1-jenkins',
                        '.'
                    ]

                    // Execute the Docker build command
                    sh script: dockerBuildCommand.join(' '), returnStatus: true
                }
            }
        }

stage('Push Docker Image to Docker Hub') {
    steps {
        
            script {
               
                // Tag the Docker image
                sh "docker tag test-jenkins:latest hayder69/test-jenkins:latest"

                // Push the Docker image
                sh "docker push hayder69/test-jenkins:latest"
            }
        
    }

}
    stage('deploy on k8s'){
    steps{
        kubeconfig(credentialsId: 'mykubeconfig', serverUrl: '') {
    sh"scp -o jenkins-agent-pod.yaml  satoripop@Jenkins"
    script{
        try{
            sh"ssh satoripop@Jenkins kubectl apply -f ."
        }catch(error){
            sh"ssh satoripop@Jenkins kubectl create -f ."
        }
    }
    }
    }
    }
}

}
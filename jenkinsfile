pipeline {
    agent any 

    stages {
        stage('Clone repository') {
            steps {
                script {
                    // Checkout the Laravel repository
                    checkout([$class: 'GitSCM', branches: [[name: '*/main']], userRemoteConfigs: [[credentialsId: 'git', url: 'https://github.com/guedhami/laravel']]])
                }
            }
        }

        stage('Build image') {
            steps {
                script {
                    // Define the Docker build command and its arguments as a list
                    def dockerBuildCommand = [
                        'docker',
                        'build',
                        '-t', 'test-jenkins',  // Specify the image name and tag here
                        '.'
                    ]

                    // Execute the Docker build command based on the agent's OS
                    if (isUnix()) {
                        // For non-Windows agents, use the 'sh' step
                        sh script: dockerBuildCommand.join(' '), returnStatus: true
                    } 

                    if (currentBuild.resultIsBetterOrEqualTo('SUCCESS')) {
                        echo 'Docker image built successfully.'
                    } else {
                        error 'Docker image build failed.'
                    }
                }
            }
        }

        stage('Debugging') {
            steps {
                script {
                    // Print Docker credentials
                    echo "Docker Username: $hayder69 "
                    echo "Docker Token: $dckr_pat_uQfuQ234dHKEE0vbdTISPMIymPQ"
                    
                    // Print other environment variables
                    def envVars = sh(script: 'env', returnStdout: true).trim()
                    echo "Environment Variables:"
                    echo envVars
                }
            }
        }

        stage('Push image') {
            steps {
                script {
                    // Push the Docker image to Docker Hub using the credentials
                    docker.withRegistry('https://hub.docker.com/repository/docker/hayder69/test/general') {
                        dockerImage.push()
                    }
                }
            }
        }
    }
}
